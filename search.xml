<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[把Hexo托管到Coding上]]></title>
      <url>/2017/10/09/coding/</url>
      <content type="html"><![CDATA[<h3 id="为什么？"><a href="#为什么？" class="headerlink" title="为什么？"></a>为什么？</h3><p><strong>为什么把Hexo托管到Coding上呢？放在GitHub上不上很好吗？</strong></p>
<p>首先让我们了解一下什么是coding：</p>
<blockquote>
<p>Coding是国内Git代码托管平台。国内首个Git代码托管平台GitCafe已被Coding收购。也提供page服务。</p>
<p>Coding 是一个面向开发者的云端开发平台，目前提供代码托管，运行空间，质量控制，项目管理等功能。此外，还提供社会化协作功能，包含了社交元素，方便开发者进行技术讨论和协作。</p>
</blockquote>
<p><strong>为什么用两个代码托管平台？</strong></p>
<p>很多人都把hexo托管到github上，因为github大家都用的比较久了。但是，你的博客主要访问者肯定还是国内的用户，国内的用户访问coding比github是要快不少的。还可以利用域名解析实现国内的走coding，海外的走github，分流网站的访问。</p>
<p><img src="http://ox2o4zwyi.bkt.clouddn.com/coding1.jpg" alt="coding.net"></p>
<h3 id="将博客托管到GitHub和Coding上"><a href="#将博客托管到GitHub和Coding上" class="headerlink" title="将博客托管到GitHub和Coding上"></a>将博客托管到GitHub和Coding上</h3><p>如何将博客托管到GitHub上，在之前的博客里已经写过了，这里就不多说了。</p>
<ol>
<li>注册coding帐号</li>
<li>创建仓库  </li>
<li>配置SHH</li>
<li>添加 SSH Key 到 Coding</li>
<li>测试SSH是否配置成功</li>
<li>创建 Coding Pages 服务</li>
<li>将博客网站部署到 Coding 中</li>
<li>注册及绑定自己的域名地址</li>
</ol>
<h4 id="注册coding帐号"><a href="#注册coding帐号" class="headerlink" title="注册coding帐号"></a>注册coding帐号</h4><p>访问<a href="https://coding.net" target="_blank" rel="external">coding.net官网</a>注册并登录</p>
<h4 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h4><p>点+创建项目<br><img src="http://7xs5l8.com1.z0.glb.clouddn.com/wangzhan%E6%88%AA%E5%9B%BE04.png" alt="创建项目"></p>
<p>填写项目名称描述创建即可</p>
<p><img src="http://ox2o4zwyi.bkt.clouddn.com/coding2.jpg" alt="创建项目"></p>
<p>推荐创建的项目名为 {username}.coding.me，<br>这样稍后生成的 Pages 默认链接即为 {username}.coding.me。<br>建议勾选「启动README.md文件初始化项目」。</p>
<h4 id="配置SSH"><a href="#配置SSH" class="headerlink" title="配置SSH"></a>配置SSH</h4><p>因为之前我们配置GitHub时已经配置好SSH，因此我们接着做下一步就行。</p>
<h4 id="添加-SSH-Key-到-Coding"><a href="#添加-SSH-Key-到-Coding" class="headerlink" title="添加 SSH Key 到 Coding"></a>添加 SSH Key 到 Coding</h4><p>打开Git Bash，输入：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cd ~/.ssh</div><div class="line">cat id_rsa.pub</div></pre></td></tr></table></figure>
<p><img src="http://ox2o4zwyi.bkt.clouddn.com/coding3.jpg" alt="SSH"></p>
<p>全选复制，然后进入coding，点击账户，再点击SSH公钥：</p>
<p><img src="http://ox2o4zwyi.bkt.clouddn.com/coding5.jpg" alt="SSH"></p>
<p>公钥名称随便写，公钥内容粘贴刚刚你复制的SSH，公钥有效期至博主勾选了永久有效，然后点击添加即可。</p>
<h4 id="测试SSH是否配置成功"><a href="#测试SSH是否配置成功" class="headerlink" title="测试SSH是否配置成功"></a>测试SSH是否配置成功</h4><p>打开Git Bash，输入：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssh -T git@git.coding.net</div></pre></td></tr></table></figure>
<p>如果看到如图结果，说明coding中的SSH配置成功。</p>
<p><img src="http://ox2o4zwyi.bkt.clouddn.com/coding6.jpg" alt="coding中的SSH配置成功"></p>
<h4 id="创建-Coding-Pages-服务"><a href="#创建-Coding-Pages-服务" class="headerlink" title="创建 Coding Pages 服务"></a>创建 Coding Pages 服务</h4><p>官网点击代码再点击 Pages 服务，分支填写master ，点击保存，结果如图。</p>
<p><img src="http://ox2o4zwyi.bkt.clouddn.com/coding7.jpg" alt="创建 Coding Pages 服务"></p>
<h4 id="将博客网站部署到-Coding-中"><a href="#将博客网站部署到-Coding-中" class="headerlink" title="将博客网站部署到 Coding 中"></a>将博客网站部署到 Coding 中</h4><p>打开<code>D:\blog</code>文件夹中的<code>_config.yml</code>文件，找到如下位置，填写：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"># Deployment</div><div class="line">## Docs: https://hexo.io/docs/deployment.html</div><div class="line">deploy:</div><div class="line">  type: git</div><div class="line">  repo: </div><div class="line">      github: git@github.com:yourname/yourname.github.io.git,master</div><div class="line">      coding: git@git.coding.net:yourname/yourname.git,master</div></pre></td></tr></table></figure>
<p>部署到github和coding.net。</p>
<p><strong>注</strong>：<br> (1) 其中yourname替换成你的Github账户名。<br> (2)注意在yml文件中，:后面都是要带空格的。<br> (3)<code>coding:</code>后面的代码直接从coding官网的下图位置复制过来。</p>
<p><img src="http://ox2o4zwyi.bkt.clouddn.com/coding8.jpg" alt="HTTPS SSH 方式访问仓库"></p>
<p>再blog文件夹中空白处右击Git Bash Here打开Git Bash输入：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">hexo clean</div><div class="line">hexo g</div><div class="line">hexo d</div></pre></td></tr></table></figure>
<p>此时，通过访问<code>http://yourname.github.io</code>和<code>http://yourname.coding.me</code>就可以看到你部署上去的博客了，同步了github和coding。</p>
<h4 id="注册及绑定自己的域名地址"><a href="#注册及绑定自己的域名地址" class="headerlink" title="注册及绑定自己的域名地址"></a>注册及绑定自己的域名地址</h4><p>域名注册就不多说了，主要是解析域名 CNAME 记录到 <code>yourname.coding.me</code> 后，还要在官网绑定一下。</p>
<p><img src="http://ox2o4zwyi.bkt.clouddn.com/coding9.jpg" alt="绑定域名"></p>
<p><strong>本博文有什么错误的地方欢迎到博文下方的评论区评论或者给博主发邮件，谢谢！</strong></p>
]]></content>
      
        
        <tags>
            
            <tag> hexo </tag>
            
            <tag> blog </tag>
            
            <tag> coding </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[在indigo主题的hexo博客上添加来必力评论系统]]></title>
      <url>/2017/09/30/livere/</url>
      <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>Hexo 的很多主题比如说NexT，都是用的 <code>Swig</code> 模板写的，而我们用的indigo是用 <code>EJS</code> JavaScript模板库编写的，用来从<code>JSON</code>数据中生成HTML字符串。而网上大多数关于Hexo添加评论系统的博文，都是用NexT主题为例，而且较少用来必力评论系统的，因此不适用于我们的indigo主题的Hexo博客</p>
<h3 id="评论系统的选择"><a href="#评论系统的选择" class="headerlink" title="评论系统的选择"></a>评论系统的选择</h3><p><em>畅言</em>、<em>来比力</em>、<em>网易云跟帖</em>、<em>多说</em>、<em>友言</em>、<em>Disqus</em> ，这几家第三方实时社会化系统是用得比较多的。然而网易云跟帖、多说接连关停服务；友言在功能上看上去还是不错的，但是输在了UI界面上，还有友言不支持https协议，因为github使用的是https协议；畅言需要备案（虽然我的网站已备案哈哈），对于很多博主来说是件很麻烦的事；Disqus本地化做的不够好，要梯(fan)子(qiang)才能使用，Hexo官网的API下的评论系统用的就是Disqus；还有一些像gitment和HashOver等等就没有去研究了。 所以我最后的选择是<a href="https://livere.com/" target="_blank" rel="external">来必力</a>。</p>
<h3 id="来必力"><a href="#来必力" class="headerlink" title="来必力"></a>来必力</h3><blockquote>
<p><a href="https://livere.com/" target="_blank" rel="external">来必力(LiveRe)</a>是韩国的一款社会化评论服务，它的完成度很高，拥有和多说类似的功能，而且非常美观，看历史也不是很快就会死的服务。它的 UI 非常的现代化，而且在引用方面有一些比 Disqus 和多说都要方便的实现，总的来说是一个不错的产品，来必力的缺点就是加载有点慢。</p>
</blockquote>
<p>来必力评论系统到底什么样呢？翻到本博文的最底下你就能看到啦。</p>
<p><img src="http://ox2o4zwyi.bkt.clouddn.com/livere.jpg" alt="livere"></p>
<p>进入<a href="https://livere.com/" target="_blank" rel="external">LiveRe</a>官网，注册账号。来必力是韩国的网站，注册的时候会出现点韩语，不过莫慌，该看懂的还是看的懂，多试几次。</p>
<p>LiveRe(来必力) 有两个版本：<br>City 版：是一款适合所有人使用的免费版本；<br>Premium 版：是一款能够帮助企业实现自动化管理的多功能收费版本。<br>我们 City 版就够了。</p>
<p>注册成功后到管理界面去：</p>
<p><img src="http://ox2o4zwyi.bkt.clouddn.com/%E6%9D%A5%E5%BF%85%E5%8A%9B%E7%82%B9%E5%87%BB%E7%AE%A1%E7%90%86%E9%A1%B5%E9%9D%A2.jpg" alt="来必力点击管理界面"></p>
<p>嗯，就是这个样子：<br><img src="http://ox2o4zwyi.bkt.clouddn.com/%E7%AE%A1%E7%90%86%E7%95%8C%E9%9D%A2.jpg" alt="管理界面"></p>
<p>在代码管理中获取安装代码：</p>
<p><img src="http://ox2o4zwyi.bkt.clouddn.com/%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86.jpg" alt="代码管理"></p>
<p>打码的那部分就是你的uid了，到时候修改配置是要用上。</p>
<h3 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h3><p>因为indigo主题中没有配置来必力评论系统，所以我们要手动配置。</p>
<p>在插件目录<code>myblog\themes\indigo\layout_partial\plugins</code>下新建一个名为<code>livere.ejs</code>的文件，这就是来必力插件。</p>
<p><img src="http://ox2o4zwyi.bkt.clouddn.com/livere01.png" alt="新建livers.ejs插件"></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">&lt;% if (theme.livere_uid)&#123; %&gt;</div><div class="line">&lt;!-- 来必力City版安装代码 --&gt;</div><div class="line">&lt;div id=&quot;lv-container&quot; data-id=&quot;city&quot; data-uid=&quot;youruid&quot;&gt;</div><div class="line">&lt;script type=&quot;text/javascript&quot;&gt;</div><div class="line">    (function(d, s) &#123;</div><div class="line">   var j, e = d.getElementsByTagName(s)[0];</div><div class="line"></div><div class="line">   if (typeof LivereTower === &apos;function&apos;) &#123; return; &#125;</div><div class="line"></div><div class="line">   j = d.createElement(s);</div><div class="line">   j.src = &apos;https://cdn-city.livere.com/js/embed.dist.js&apos;;</div><div class="line">   j.async = true;</div><div class="line"></div><div class="line">   e.parentNode.insertBefore(j, e);</div><div class="line">    &#125;)(document, &apos;script&apos;);</div><div class="line">&lt;/script&gt;</div><div class="line">&lt;noscript&gt; 为正常使用来必力评论功能请激活JavaScript&lt;/noscript&gt;</div><div class="line">&lt;/div&gt;</div><div class="line">&lt;!-- City版安装代码已完成 --&gt;</div><div class="line">&lt;% &#125; %&gt;</div></pre></td></tr></table></figure>
<p>在来必力中获取的代码替换一下即可。</p>
<p>然后在<code>D:\forJavaStudy\myblog\themes\indigo\layout_partial\post</code>目录下修改<code>comment.ejs</code>文件，在文件末尾添加以下代码：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;%- partial(&apos;../plugins/livere&apos;) %&gt;</div></pre></td></tr></table></figure>
<p>修改Hexo的配置文件，主题目录<code>myblog\themes\indigo</code>下的<code>_config.yml</code>文件，在评论部分添加如下代码，如下：</p>
<p><img src="http://ox2o4zwyi.bkt.clouddn.com/livere02.png" alt="修改comment.ejs"></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">livere_uid: MTAyMC8zMTA5MCXXXXXX</div></pre></td></tr></table></figure>
<p>这样就完成了配置，更新一下即可。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">hexo clean</div><div class="line">hexo g</div><div class="line">hexo d</div></pre></td></tr></table></figure>
<p>然后进入你的博客网站博文下面就可以看到评论功能了，是不是很激动？哈哈</p>
<p><img src="http://ox2o4zwyi.bkt.clouddn.com/livere03.jpg" alt="来必力评论系统"></p>
<p><strong>本博文有什么错误的地方欢迎到博文下方的评论区评论或者给博主发邮件，谢谢！</strong></p>
<hr>
]]></content>
      
        
        <tags>
            
            <tag> hexo </tag>
            
            <tag> blog </tag>
            
            <tag> indigo </tag>
            
            <tag> livere </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[如何用hexo+github免费搭建自己的博客网站？]]></title>
      <url>/2017/09/24/build-blog/</url>
      <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>其实平时自己写的文章并不多，偶尔看到一些东西会做点笔记，但是每次写的东西都会到处放，不好找，所以才想着自己搭建一个人博客网站，现在大家用hexo比较多，也比较方便，并且能使用的主题也很多，所以我就用它啦~</p>
<p>本篇为从零开始的基础篇，其他SEO、评论系统、统计等请看<a href="http://visugar.com/2017/08/01/20170801HexoPlugins/" target="_blank" rel="external">Hexo博客添加SEO-评论系统-阅读统计-站长统计</a>，本篇所包含的内容如下：</p>
<ol>
<li>前言</li>
<li>耍起来</li>
<li>安装Git Bash</li>
<li>安装NodeJs</li>
<li>安装hexo</li>
<li>依赖安装</li>
<li>生成SSH并添加到github</li>
<li>部署项目</li>
<li>上传到github</li>
<li>绑定个人域名</li>
<li>修改及配置主题</li>
<li>添加RSS</li>
<li>添加评论</li>
<li>写文章</li>
<li>开启标签页和分类页</li>
<li>其他</li>
<li>小结一波</li>
</ol>
<h3 id="耍起来"><a href="#耍起来" class="headerlink" title="耍起来"></a>耍起来</h3><p>由于我的的电脑在搭建博客之前就有了各种环境，但是对于没有任何基础的人来讲，我觉得还是从源头开始讲会好一点，就像教别人做菜，总得把所有的用料及步骤说清楚对吧？（大佬们可以自动忽略啊啊啊啊~）</p>
<h3 id="安装Git-Bash"><a href="#安装Git-Bash" class="headerlink" title="安装Git Bash"></a>安装Git Bash</h3><p>我一直不太喜欢在cmd中操作各种命令，所以挑了这个比较好使的<a href="https://git-for-windows.github.io/" target="_blank" rel="external">Git Bash</a>, 我的是windows环境，所以下载windows版本并安装就可以了。<a href="https://git-for-windows.github.io/" target="_blank" rel="external">Git Bash下载地址</a></p>
<p>安装步骤：双击下载好的exe文件，一路next就好啦</p>
<p>安装好后，打开gitbash，查看版本：</p>
<p>命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git version</div></pre></td></tr></table></figure></p>
<p>(写这篇博客的时候最新版本：2.12.2)</p>
<p><img src="http://opif0c56u.bkt.clouddn.com/gitversion.png" alt="git version"></p>
<p>然后你就可以在这里发挥你的聪明才智了</p>
<h3 id="安装NodeJs"><a href="#安装NodeJs" class="headerlink" title="安装NodeJs"></a>安装NodeJs</h3><p>Hexo是基于nodeJS环境的静态博客，里面的npm工具很有用啊，所以还是老老实实把这玩意儿装了吧</p>
<p><a href="https://nodejs.org/en/" target="_blank" rel="external">下载地址</a>(说明：LTS为长期支持版，Current为当前最新版)</p>
<p>安装步骤：反正下载好msi文件后，双击打开安装，也是一路next，不过在Custom Setup这一步记得选<code>Add to PATH</code> ,这样你就不用自己去配置电脑上环境变量了，装完在按 <code>win + r</code>快捷键调出运行，然后输入<code>cmd</code>确定，在cmd中输入path可以看到你的node是否配置在里面（环境变量），没有的话你就自由发挥吧。</p>
<p>查看版本：</p>
<p>命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">node -v</div></pre></td></tr></table></figure></p>
<p><img src="http://opif0c56u.bkt.clouddn.com/node-v.png" alt="node -v"></p>
<p>又到自由发挥的时候了</p>
<h3 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h3><p>看到这么多安装，千万不要紧张，小哥哥小姐姐们一定要稳住，别怕，因为后面的东西都是在gitbash中用npm工具安装就好了。</p>
<p>先创建一个文件夹（用来存放所有blog的东西），然后<code>cd</code>到该文件夹下。</p>
<p>安装hexo命令：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm i -g hexo</div></pre></td></tr></table></figure>
<p>安装完成后，查看版本：</p>
<p><img src="http://opif0c56u.bkt.clouddn.com/hexo-v.png" alt="npm-v"></p>
<p>初始化命令：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo init</div></pre></td></tr></table></figure>
<p>，初始化完成之后打开所在的文件夹可以看到以下文件：</p>
<p><img src="http://opif0c56u.bkt.clouddn.com/hexo-init.png" alt="my blog"></p>
<p>解释一下：</p>
<ul>
<li>node_modules：是依赖包</li>
<li>public：存放的是生成的页面</li>
<li>scaffolds：命令生成文章等的模板</li>
<li>source：用命令创建的各种文章</li>
<li>themes：主题</li>
<li>_config.yml：整个博客的配置</li>
<li>db.json：source解析所得到的</li>
<li>package.json：项目所需模块项目的配置信息</li>
</ul>
<p>做好这些前置工作之后接下来的就是各种配配配置了。</p>
<h3 id="依赖安装"><a href="#依赖安装" class="headerlink" title="依赖安装"></a>依赖安装</h3><ul>
<li><p>安装Less，使用 less 作为 css 预处理工具。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-renderer-less --save</div></pre></td></tr></table></figure>
</li>
<li><p>安装Feed，用于生成 rss，但是我现在还不知道rss是干什么的，先跟着教程来。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-generator-feed --save</div></pre></td></tr></table></figure>
</li>
<li><p>Json-content，用于生成静态站点数据，用作站内搜索的数据源。这个我也还不懂，后续完善吧。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-generator-json-content --save</div></pre></td></tr></table></figure>
</li>
<li><p>QRCode，用于生成微信分享二维码。网页分享中微信可以动态生成该网页的分享分二维码。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-helper-qrcode --save</div></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="生成SSH并添加到github"><a href="#生成SSH并添加到github" class="headerlink" title="生成SSH并添加到github"></a>生成SSH并添加到github</h3><p>没账号的创建账号，有账号的看下面。</p>
<p>创建一个repo，名称为yourname.github.io, 其中yourname是你的github名称，按照这个规则创建才有用哦，如下：</p>
<p><img src="http://opif0c56u.bkt.clouddn.com/new-repo.png" alt="new-repo"></p>
<p><img src="http://opif0c56u.bkt.clouddn.com/create-repo.png" alt="create-repo"></p>
<p>回到gitbash中，配置github账户信息（YourName和YourEail都替换成你自己的）：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git config --global user.name &quot;YourName&quot;</div><div class="line">git config --global user.email &quot;YourEmail&quot;</div></pre></td></tr></table></figure>
<p><img src="http://opif0c56u.bkt.clouddn.com/username.png" alt="username"></p>
<p><img src="http://opif0c56u.bkt.clouddn.com/email.png" alt="emeil"></p>
<p>创建SSH</p>
<p>在gitbash中输入：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssh-keygen -t rsa -C &quot;youremail@example.com&quot;</div></pre></td></tr></table></figure>
<p>生成ssh。然后按下图的方式找到id_rsa.pub文件的内容。</p>
<p><img src="http://opif0c56u.bkt.clouddn.com/ssh.png" alt="ssh"></p>
<p>将上面获取的ssh放到github中：</p>
<p><img src="http://opif0c56u.bkt.clouddn.com/settings.png" alt="settings"></p>
<p><img src="http://opif0c56u.bkt.clouddn.com/ssh-key.png" alt="ssh-key"></p>
<p>添加一个 <code>New SSH key</code> ，title随便取，key就填刚刚那一段。</p>
<p>在gitbash中验证是否添加成功：<code>ssh -T git@github.com</code></p>
<p>完成下一步你就成功啦！</p>
<h3 id="部署项目"><a href="#部署项目" class="headerlink" title="部署项目"></a>部署项目</h3><p>用编辑器打开你的blog项目，修改<code>_config.yml</code>文件的一些配置(冒号之后都是有一个半角空格的)：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">deploy:</div><div class="line">  type: git</div><div class="line">  repo: https://github.com/YourgithubName/YourgithubName.github.io.git</div><div class="line">  branch: master</div></pre></td></tr></table></figure>
<p>回到gitbash中，进入你的blog目录，分别执行以下命令：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">hexo clean</div><div class="line">hexo g</div><div class="line">hexo s</div></pre></td></tr></table></figure>
<p>注：hexo 3.0把服务器独立成个别模块，需要单独安装：<code>npm i hexo-server</code>。</p>
<p>打开浏览器输入：<code>http://localhost:4000</code></p>
<p>接着你就可以遇见天使的微笑了~</p>
<h3 id="上传到github"><a href="#上传到github" class="headerlink" title="上传到github"></a>上传到github</h3><p>先安装一波：<code>npm install hexo-deployer-git --save</code>（这样才能将你写好的文章部署到github服务器上并让别人浏览到）</p>
<p>执行命令（建议每次都按照如下步骤部署）：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">hexo clean</div><div class="line">hexo g</div><div class="line">hexo d</div></pre></td></tr></table></figure>
<p>注意<code>hexo d</code>的过程中要输入你的github账号和密码。如下：</p>
<p><img src="http://opif0c56u.bkt.clouddn.com/deploy.png" alt="deploy"></p>
<p>在浏览器中输入<code>http://yourgithubname.github.io</code>就可以看到你的个人博客啦，是不是很兴奋！</p>
<p>感觉gitbash中东西太多的时候输入<code>clear</code>命令清空。</p>
<h3 id="绑定个人域名"><a href="#绑定个人域名" class="headerlink" title="绑定个人域名"></a>绑定个人域名</h3><p>不想绑定的请自行忽略</p>
<p>第一步购买域名：随便在哪个网站买一个就好了，博主是在阿里云购买的<code>wenyu2333.top</code>, 可以使用其自带的域名解析服务。</p>
<p>第二步添加CNAME：在项目的<code>source</code>文件夹下新建一个名为<code>CNAME</code>的文件，在里面添加你购买的域名，比如我添加的是<code>blog.wenyu2333.top</code>，只能添加一个哦。</p>
<p>到DNS中添加一条记录：</p>
<p><img src="http://opif0c56u.bkt.clouddn.com/dns-note.png" alt="dns-note"></p>
<p>其中ip地址为你的github的地址，可在<code>cmd</code>中<code>ping</code>一下就能看到(<code>ping yourname.github.io</code>)：</p>
<p><img src="http://opif0c56u.bkt.clouddn.com/githubip.png" alt="github-ip"></p>
<p>接着再次部署一下，用你购买的域名打开，就可以看到你的博客啦~</p>
<p>不过现在域名想要正常使用都要备案，对于很多小白来说备案可能是个很让人头疼的事，如何备案请自行百度。</p>
<h3 id="修改及配置主题"><a href="#修改及配置主题" class="headerlink" title="修改及配置主题"></a>修改及配置主题</h3><p>hexo初始化之后默认的主题是<code>landscape</code> , 然后你可以去<a href="https://hexo.io/themes/" target="_blank" rel="external">这个地址</a>里面找到你想要的主题。在github中搜索你要的主题名称，里面都会有该主题的如何使用的介绍，按着来就好了，反正就是改改改！我选的是<code>indigo</code>主题，看起来挺不错，至少是我喜欢的类型。</p>
<p>把主题下载下来后解压放到<code>/themes</code>目录下，再在<code>_config.yml</code>配置文件里修改成以下代码即可：</p>
<p><img src="http://ox2o4zwyi.bkt.clouddn.com/hexo01.jpg" alt="主题配置"></p>
<p>跟该主题相关的配置在<code>/themes/indigo/_config.yml</code>里面，根据你的需要在这配置就行了。</p>
<p>有的东西我也不知道是啥玩意儿，你要多试多倒腾几次，就能意会啦！</p>
<h3 id="添加RSS"><a href="#添加RSS" class="headerlink" title="添加RSS"></a>添加RSS</h3><p>之前已经安装好了rss，再做以下操作就可以了。</p>
<p>在你的项目的<code>_config.yml</code>配置文件下找到<code>Extensions</code>添加如下内容：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"># Extensions  #插件和主题</div><div class="line">## Plugins: https://hexo.io/plugins/</div><div class="line">## Themes: https://hexo.io/themes/</div><div class="line">#RSS订阅</div><div class="line">plugin:</div><div class="line">- hexo-generator-feed</div><div class="line">#Feed Atom</div><div class="line">feed:</div><div class="line">  type: atom</div><div class="line">  path: atom.xml</div><div class="line">  limit: 20</div></pre></td></tr></table></figure>
<p>进入到你的主题的配置文件下，找到你的放rss的位置，添加<code>/atom.xml</code>即可。</p>
<p>重新部署再打开就能看到效果啦~</p>
<h3 id="添加评论"><a href="#添加评论" class="headerlink" title="添加评论"></a>添加评论</h3><p>请参考我的另一篇博文：</p>
<p><a href="http://blog.wenyu2333.top/2017/09/30/livere/">在indigo主题的hexo博客上添加评论系统</a></p>
<h3 id="写文章"><a href="#写文章" class="headerlink" title="写文章"></a>写文章</h3><ul>
<li>新建文章：<code>hexo new &#39;文章名&#39;</code>，然后你就可以在<code>source/_posts</code>路径下看到你创建的文章啦，编辑完成之后按照前面说的方式部署，在浏览器刷新就能看到你的文章了。</li>
<li>关于具体的文章编辑你可以看下<a href="https://hexo.io/zh-cn/docs/writing.html" target="_blank" rel="external">官网的介绍</a>，<a href="http://www.jianshu.com/p/3c7ddd48bfa9" target="_blank" rel="external">简书一博主写的介绍</a></li>
<li>至于<code>markdown</code>，可以自行发挥啦~，<code>markdown</code>的编辑器推荐在<a href="http://marxi.co/" target="_blank" rel="external">marxi官网</a>编写，也可以看看<a href="http://www.williamlong.info/archives/4319.html" target="_blank" rel="external">其他的编辑工具</a></li>
</ul>
<h3 id="开启标签页和分类页"><a href="#开启标签页和分类页" class="headerlink" title="开启标签页和分类页"></a>开启标签页和分类页</h3><ul>
<li>开启标签页</li>
</ul>
<p>开启标签页，会新建一个文件夹，文件夹有一个index.md文件。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo new page tags</div></pre></td></tr></table></figure>
<p>修改 <code>hexo/source/tags/index.md</code> 的元数据<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">layout: tags</div><div class="line"> comments: false</div><div class="line"> ---</div></pre></td></tr></table></figure></p>
<ul>
<li>开启分类页</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo new page categories</div></pre></td></tr></table></figure>
<p>修改 <code>hexo/source/categories/index.md</code> 的元数据<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">layout: categories</div><div class="line"> comments: false</div><div class="line"> ---</div></pre></td></tr></table></figure></p>
<p>会自动生成文件夹 如图：</p>
<p><img src="http://upload-images.jianshu.io/upload_images/4961439-0cf52acf5ca73f0a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="source文件夹介绍"></p>
<p>记得在<code>\themes\indigo\_config.yml</code>里menu下配置archives和tags：</p>
<p><img src="http://ox2o4zwyi.bkt.clouddn.com/hexo02.jpg" alt="config.yml里的配置"></p>
<p>接下来部署一番后打开网站就能看到效果了：</p>
<p><img src="http://ox2o4zwyi.bkt.clouddn.com/archive.jpg" alt="archives"></p>
<p><img src="http://ox2o4zwyi.bkt.clouddn.com/tags.jpg" alt="tags"></p>
<p>哈哈，又激动了一波~</p>
<h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><p>关于图床、SEO、统计等等请看<a href="http://visugar.com/2017/08/01/20170801HexoPlugins/" target="_blank" rel="external">Hexo博客添加SEO-评论系统-阅读统</a></p>
<h3 id="小结一波"><a href="#小结一波" class="headerlink" title="小结一波"></a>小结一波</h3><ul>
<li>在哪里跌倒，就在哪里趴下，休息一会儿你会发现新大陆的哦~</li>
<li>本文针对的是从来没用hexo搭建过个人博客的小伙伴，不过文中可能会有一些小错误，欢迎大佬们指正，可以下文章下方评论区评论，不胜感激！</li>
<li>感觉我好啰嗦啊，可是没办法，我就是这么爱打字丫</li>
</ul>
<hr>
<p>原文地址：<a href="http://visugar.com/2017/05/04/20170504SetUpHexoBlog/" target="_blank" rel="external">hexo从零开始到搭建完整</a></p>
<hr>
]]></content>
      
        
        <tags>
            
            <tag> hexo </tag>
            
            <tag> blog </tag>
            
            <tag> github </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hexo和GitHub分别是什么？]]></title>
      <url>/2017/09/24/what-is-hexo-and-github/</url>
      <content type="html"><![CDATA[<hr>
<h2 id="什么是-hexo？"><a href="#什么是-hexo？" class="headerlink" title="什么是 hexo？"></a>什么是 hexo？</h2><p><a href="https://hexo.io/zh-cn/" target="_blank" rel="external">Hexo</a>是一个快速, 简洁且高效的博客框架. 让上百个页面在几秒内瞬间完成渲染. Hexo支持Github Flavored Markdown的所有功能, 甚至可以整合Octopress的大多数插件. 并自己也拥有强大的插件系统.</p>
<p>Hexo是一个开源的静态博客生成器,用node.js开发,作者是台湾大学生tommy351。</p>
<h5 id="Hexo的原理是什么？"><a href="#Hexo的原理是什么？" class="headerlink" title="Hexo的原理是什么？"></a>Hexo的原理是什么？</h5><blockquote>
<p>首先自己本地文件夹的 source 就是数据库，以 .md(markdown) 格式存储文章，theme 文件夹是主题文件，以 .yml 等类型，决定了页面如何“组装”每次运行 hexo g 命令，hexo(node.js程序)会遍历你的 source 目录，建立索引，根据你 theme 文件夹的主题生成页面到 public 文件夹。这时 public 文件夹就是一个纯由 html javascript css 等内容制作的博客，而这些恰好能在 git pages 识别最后 hexo d 将 public 文件夹的内容复制到临时目录，以 git 方式 push 到 github 的指定项目的指定分支，由 github 进行显示。</p>
<p>作者：孔晨皓<br>链接：<a href="https://www.zhihu.com/question/51588481/answer/126547622" target="_blank" rel="external">https://www.zhihu.com/question/51588481/answer/126547622</a><br>来源：知乎</p>
</blockquote>
<hr>
<h2 id="什么是-GitHub？"><a href="#什么是-GitHub？" class="headerlink" title="什么是 GitHub？"></a>什么是 GitHub？</h2><p>  <a href="https://github.com/" target="_blank" rel="external">GitHub</a>是一个面向开源及私有软件项目的托管平台，因为只支持git 作为唯一的版本库格式进行托管，故名gitHub。</p>
<p>gitHub于2008年4月10日正式上线，除了git代码仓库托管及基本的 Web管理界面以外，还提供了订阅、讨论组、文本渲染、在线文件编辑器、协作图谱（报表）、代码片段分享（Gist）等功能。目前，其注册用户已经超过350万，托管版本数量也是非常之多，其中不乏知名开源项目 Ruby on Rails、jQuery、python 等。</p>
<p>作为开源代码库以及版本控制系统，Github拥有超过900万开发者用户。随着越来越多的应用程序转移到了云上，Github已经成为了管理软件开发以及发现已有代码的首选方法。</p>
<p>如前所述，作为一个分布式的版本控制系统，在Git中并不存在主库这样的概念，每一份复制出的库都可以独立使用，任何两个库之间的不一致之处都可以进行合并。</p>
<p>GitHub可以托管各种git库，并提供一个web界面，但与其它像 SourceForge或Google Code这样的服务不同，GitHub的独特卖点在于从另外一个项目进行分支的简易性。为一个项目贡献代码非常简单：首先点击项目站点的“fork”的按钮，然后将代码检出并将修改加入到刚才分出的代码库中，最后通过内建的“pull request”机制向项目负责人申请代码合并。已经有人将GitHub称为代码玩家的MySpace。</p>
<p>在GitHub进行分支就像在Myspace（或Facebook…）进行交友一样，在社会关系图的节点中不断的连线。</p>
<p>GitHub项目本身自然而然的也在GitHub上进行托管，只不过在一个私有的，公共视图不可见的库中。开源项目可以免费托管，但私有库则并不如此。Chris Wanstrath，GitHub的开发者之一，肯定了通过付费的私有库来在财务上支持免费库的托管这一计划。</p>
<p>是的，我们正是这么计划的。通过与客户的接洽，开发FamSpam，甚至是开发GitHub本身，GitHub的私有库已经被证明了物有所值。任何希望节省时间并希望和团队其它成员一样远离页面频繁转换之苦的人士都会从GitHub中获得他们真正想要的价值。在GitHub，用户可以十分轻易地找到海量的开源代码。</p>
<hr>
]]></content>
      
        
        <tags>
            
            <tag> hexo </tag>
            
            <tag> github </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Welcome to my blog]]></title>
      <url>/2017/09/23/welcome/</url>
      <content type="html"><![CDATA[<hr>
<h2 id="Welcome-to-my-blog-I’m-Wen-Yu-I-am-a-college-student-in-Nanchang-I-built-this-personal-blog-for-the-first-time-in-September-22-2017-It-was-built-using-hexo-github-I’m-so-happy-to-build-such-a-beautiful-blog-easily-I’ll-share-some-things-that-I-find-interesting-here"><a href="#Welcome-to-my-blog-I’m-Wen-Yu-I-am-a-college-student-in-Nanchang-I-built-this-personal-blog-for-the-first-time-in-September-22-2017-It-was-built-using-hexo-github-I’m-so-happy-to-build-such-a-beautiful-blog-easily-I’ll-share-some-things-that-I-find-interesting-here" class="headerlink" title="Welcome to my blog! I’m Wen Yu,I am a college student in Nanchang. I built this personal blog for the first time in September 22, 2017. It was built using hexo+github. I’m so happy to build such a beautiful blog easily. I’ll share some things that I find interesting here."></a>Welcome to my blog! I’m Wen Yu,I am a college student in Nanchang. I built this personal blog for the first time in September 22, 2017. It was built using hexo+github. I’m so happy to build such a beautiful blog easily. I’ll share some things that I find interesting here.</h2>]]></content>
      
        
        <tags>
            
            <tag> blog </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>/2017/09/22/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
      
        
    </entry>
    
  
  
</search>
